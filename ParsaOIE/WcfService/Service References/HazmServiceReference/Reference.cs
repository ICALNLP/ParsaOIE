//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService.HazmServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://127.0.0.1/simple.wsdl", ConfigurationName="HazmServiceReference.my_dispatcherPortType")]
    public interface my_dispatcherPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Parse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        string Parse(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Parse", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        System.Threading.Tasks.Task<string> ParseAsync(string text);
        
        // CODEGEN: Parameter 'resp' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/WordTokenizer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        WcfService.HazmServiceReference.WordTokenizerResponse WordTokenizer(WcfService.HazmServiceReference.WordTokenizerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/WordTokenizer", ReplyAction="*")]
        System.Threading.Tasks.Task<WcfService.HazmServiceReference.WordTokenizerResponse> WordTokenizerAsync(WcfService.HazmServiceReference.WordTokenizerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Normalizer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        string Normalizer(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Normalizer", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        System.Threading.Tasks.Task<string> NormalizerAsync(string text);
        
        // CODEGEN: Parameter 'resp' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/SentenceTokenizer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        WcfService.HazmServiceReference.SentenceTokenizerResponse SentenceTokenizer(WcfService.HazmServiceReference.SentenceTokenizerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/SentenceTokenizer", ReplyAction="*")]
        System.Threading.Tasks.Task<WcfService.HazmServiceReference.SentenceTokenizerResponse> SentenceTokenizerAsync(WcfService.HazmServiceReference.SentenceTokenizerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Chunk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        string Chunk(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Chunk", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        System.Threading.Tasks.Task<string> ChunkAsync(string text);
        
        // CODEGEN: Parameter 'resp' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/PosTag2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        WcfService.HazmServiceReference.PosTag2Response PosTag2(WcfService.HazmServiceReference.PosTag2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/PosTag2", ReplyAction="*")]
        System.Threading.Tasks.Task<WcfService.HazmServiceReference.PosTag2Response> PosTag2Async(WcfService.HazmServiceReference.PosTag2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Stem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        string Stem(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Stem", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        System.Threading.Tasks.Task<string> StemAsync(string text);
        
        // CODEGEN: Parameter 'resp' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/PosTag", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        WcfService.HazmServiceReference.PosTagResponse PosTag(WcfService.HazmServiceReference.PosTagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/PosTag", ReplyAction="*")]
        System.Threading.Tasks.Task<WcfService.HazmServiceReference.PosTagResponse> PosTagAsync(WcfService.HazmServiceReference.PosTagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Lemmatize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        string Lemmatize(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:8888/Lemmatize", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="resp")]
        System.Threading.Tasks.Task<string> LemmatizeAsync(string text);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WordTokenizer", WrapperNamespace="http://127.0.0.1/simple.wsdl", IsWrapped=true)]
    public partial class WordTokenizerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://127.0.0.1/simple.wsdl", Order=0)]
        public string text;
        
        public WordTokenizerRequest() {
        }
        
        public WordTokenizerRequest(string text) {
            this.text = text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WordTokenizerResponse", WrapperNamespace="http://127.0.0.1/simple.wsdl", IsWrapped=true)]
    public partial class WordTokenizerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://127.0.0.1/simple.wsdl", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("retVal", IsNullable=false)]
        public string[] resp;
        
        public WordTokenizerResponse() {
        }
        
        public WordTokenizerResponse(string[] resp) {
            this.resp = resp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SentenceTokenizer", WrapperNamespace="http://127.0.0.1/simple.wsdl", IsWrapped=true)]
    public partial class SentenceTokenizerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://127.0.0.1/simple.wsdl", Order=0)]
        public string text;
        
        public SentenceTokenizerRequest() {
        }
        
        public SentenceTokenizerRequest(string text) {
            this.text = text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SentenceTokenizerResponse", WrapperNamespace="http://127.0.0.1/simple.wsdl", IsWrapped=true)]
    public partial class SentenceTokenizerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://127.0.0.1/simple.wsdl", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("retVal", IsNullable=false)]
        public string[] resp;
        
        public SentenceTokenizerResponse() {
        }
        
        public SentenceTokenizerResponse(string[] resp) {
            this.resp = resp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PosTag2", WrapperNamespace="http://127.0.0.1/simple.wsdl", IsWrapped=true)]
    public partial class PosTag2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://127.0.0.1/simple.wsdl", Order=0)]
        public string text;
        
        public PosTag2Request() {
        }
        
        public PosTag2Request(string text) {
            this.text = text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PosTag2Response", WrapperNamespace="http://127.0.0.1/simple.wsdl", IsWrapped=true)]
    public partial class PosTag2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://127.0.0.1/simple.wsdl", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("tag", IsNullable=false)]
        public string[] resp;
        
        public PosTag2Response() {
        }
        
        public PosTag2Response(string[] resp) {
            this.resp = resp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PosTag", WrapperNamespace="http://127.0.0.1/simple.wsdl", IsWrapped=true)]
    public partial class PosTagRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://127.0.0.1/simple.wsdl", Order=0)]
        public string text;
        
        public PosTagRequest() {
        }
        
        public PosTagRequest(string text) {
            this.text = text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PosTagResponse", WrapperNamespace="http://127.0.0.1/simple.wsdl", IsWrapped=true)]
    public partial class PosTagResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://127.0.0.1/simple.wsdl", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("tag", IsNullable=false)]
        public string[] resp;
        
        public PosTagResponse() {
        }
        
        public PosTagResponse(string[] resp) {
            this.resp = resp;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface my_dispatcherPortTypeChannel : WcfService.HazmServiceReference.my_dispatcherPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class my_dispatcherPortTypeClient : System.ServiceModel.ClientBase<WcfService.HazmServiceReference.my_dispatcherPortType>, WcfService.HazmServiceReference.my_dispatcherPortType {
        
        public my_dispatcherPortTypeClient() {
        }
        
        public my_dispatcherPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public my_dispatcherPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public my_dispatcherPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public my_dispatcherPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Parse(string text) {
            return base.Channel.Parse(text);
        }
        
        public System.Threading.Tasks.Task<string> ParseAsync(string text) {
            return base.Channel.ParseAsync(text);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfService.HazmServiceReference.WordTokenizerResponse WcfService.HazmServiceReference.my_dispatcherPortType.WordTokenizer(WcfService.HazmServiceReference.WordTokenizerRequest request) {
            return base.Channel.WordTokenizer(request);
        }
        
        public string[] WordTokenizer(string text) {
            WcfService.HazmServiceReference.WordTokenizerRequest inValue = new WcfService.HazmServiceReference.WordTokenizerRequest();
            inValue.text = text;
            WcfService.HazmServiceReference.WordTokenizerResponse retVal = ((WcfService.HazmServiceReference.my_dispatcherPortType)(this)).WordTokenizer(inValue);
            return retVal.resp;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfService.HazmServiceReference.WordTokenizerResponse> WcfService.HazmServiceReference.my_dispatcherPortType.WordTokenizerAsync(WcfService.HazmServiceReference.WordTokenizerRequest request) {
            return base.Channel.WordTokenizerAsync(request);
        }
        
        public System.Threading.Tasks.Task<WcfService.HazmServiceReference.WordTokenizerResponse> WordTokenizerAsync(string text) {
            WcfService.HazmServiceReference.WordTokenizerRequest inValue = new WcfService.HazmServiceReference.WordTokenizerRequest();
            inValue.text = text;
            return ((WcfService.HazmServiceReference.my_dispatcherPortType)(this)).WordTokenizerAsync(inValue);
        }
        
        public string Normalizer(string text) {
            return base.Channel.Normalizer(text);
        }
        
        public System.Threading.Tasks.Task<string> NormalizerAsync(string text) {
            return base.Channel.NormalizerAsync(text);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfService.HazmServiceReference.SentenceTokenizerResponse WcfService.HazmServiceReference.my_dispatcherPortType.SentenceTokenizer(WcfService.HazmServiceReference.SentenceTokenizerRequest request) {
            return base.Channel.SentenceTokenizer(request);
        }
        
        public string[] SentenceTokenizer(string text) {
            WcfService.HazmServiceReference.SentenceTokenizerRequest inValue = new WcfService.HazmServiceReference.SentenceTokenizerRequest();
            inValue.text = text;
            WcfService.HazmServiceReference.SentenceTokenizerResponse retVal = ((WcfService.HazmServiceReference.my_dispatcherPortType)(this)).SentenceTokenizer(inValue);
            return retVal.resp;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfService.HazmServiceReference.SentenceTokenizerResponse> WcfService.HazmServiceReference.my_dispatcherPortType.SentenceTokenizerAsync(WcfService.HazmServiceReference.SentenceTokenizerRequest request) {
            return base.Channel.SentenceTokenizerAsync(request);
        }
        
        public System.Threading.Tasks.Task<WcfService.HazmServiceReference.SentenceTokenizerResponse> SentenceTokenizerAsync(string text) {
            WcfService.HazmServiceReference.SentenceTokenizerRequest inValue = new WcfService.HazmServiceReference.SentenceTokenizerRequest();
            inValue.text = text;
            return ((WcfService.HazmServiceReference.my_dispatcherPortType)(this)).SentenceTokenizerAsync(inValue);
        }
        
        public string Chunk(string text) {
            return base.Channel.Chunk(text);
        }
        
        public System.Threading.Tasks.Task<string> ChunkAsync(string text) {
            return base.Channel.ChunkAsync(text);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfService.HazmServiceReference.PosTag2Response WcfService.HazmServiceReference.my_dispatcherPortType.PosTag2(WcfService.HazmServiceReference.PosTag2Request request) {
            return base.Channel.PosTag2(request);
        }
        
        public string[] PosTag2(string text) {
            WcfService.HazmServiceReference.PosTag2Request inValue = new WcfService.HazmServiceReference.PosTag2Request();
            inValue.text = text;
            WcfService.HazmServiceReference.PosTag2Response retVal = ((WcfService.HazmServiceReference.my_dispatcherPortType)(this)).PosTag2(inValue);
            return retVal.resp;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfService.HazmServiceReference.PosTag2Response> WcfService.HazmServiceReference.my_dispatcherPortType.PosTag2Async(WcfService.HazmServiceReference.PosTag2Request request) {
            return base.Channel.PosTag2Async(request);
        }
        
        public System.Threading.Tasks.Task<WcfService.HazmServiceReference.PosTag2Response> PosTag2Async(string text) {
            WcfService.HazmServiceReference.PosTag2Request inValue = new WcfService.HazmServiceReference.PosTag2Request();
            inValue.text = text;
            return ((WcfService.HazmServiceReference.my_dispatcherPortType)(this)).PosTag2Async(inValue);
        }
        
        public string Stem(string text) {
            return base.Channel.Stem(text);
        }
        
        public System.Threading.Tasks.Task<string> StemAsync(string text) {
            return base.Channel.StemAsync(text);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WcfService.HazmServiceReference.PosTagResponse WcfService.HazmServiceReference.my_dispatcherPortType.PosTag(WcfService.HazmServiceReference.PosTagRequest request) {
            return base.Channel.PosTag(request);
        }
        
        public string[] PosTag(string text) {
            WcfService.HazmServiceReference.PosTagRequest inValue = new WcfService.HazmServiceReference.PosTagRequest();
            inValue.text = text;
            WcfService.HazmServiceReference.PosTagResponse retVal = ((WcfService.HazmServiceReference.my_dispatcherPortType)(this)).PosTag(inValue);
            return retVal.resp;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WcfService.HazmServiceReference.PosTagResponse> WcfService.HazmServiceReference.my_dispatcherPortType.PosTagAsync(WcfService.HazmServiceReference.PosTagRequest request) {
            return base.Channel.PosTagAsync(request);
        }
        
        public System.Threading.Tasks.Task<WcfService.HazmServiceReference.PosTagResponse> PosTagAsync(string text) {
            WcfService.HazmServiceReference.PosTagRequest inValue = new WcfService.HazmServiceReference.PosTagRequest();
            inValue.text = text;
            return ((WcfService.HazmServiceReference.my_dispatcherPortType)(this)).PosTagAsync(inValue);
        }
        
        public string Lemmatize(string text) {
            return base.Channel.Lemmatize(text);
        }
        
        public System.Threading.Tasks.Task<string> LemmatizeAsync(string text) {
            return base.Channel.LemmatizeAsync(text);
        }
    }
}
